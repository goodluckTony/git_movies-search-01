{"version":3,"file":"static/js/904.36ab9ad8.chunk.js","mappings":"yMAOMA,GAAYC,EAAAA,EAAAA,IAAgB,CAChCC,SAAU,CACRC,QAAS,OACTC,cAAe,OAEjBC,KAAM,CACJC,IAAK,IACLC,KAAM,IACNC,MAAO,OACPC,OAAQ,MACRC,gBAAiB,QACjBC,OAAQ,UA4HZ,UAxHyB,WACvB,IAAMC,EAAUZ,IACVa,GAAWC,EAAAA,EAAAA,MAEjBC,GAAkCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GACtBI,GAAOC,EAAAA,EAAAA,MAAPD,GAIFE,GAAeC,EAAAA,EAAAA,cAAY,YAC/BC,EAAAA,EAAAA,IAAaJ,GACVK,MAAK,SAACC,GAAI,OAAKP,EAAaO,EAAK,IACjCC,OAAM,SAACC,GAAK,OAAKC,QAAQD,MAAMA,EAAM,GAC1C,GAAG,CAACR,IAQJ,IANAU,EAAAA,EAAAA,YAAU,WACJV,GACFE,GAEJ,GAAG,CAACF,EAAIE,KAEHJ,EACH,OAAOa,EAAAA,EAAAA,KAAA,OAAAC,SAAK,eAEdH,QAAQI,IAAIb,GAEZ,IAAQc,EAAgEhB,EAAhEgB,eAAgBC,EAAgDjB,EAAhDiB,aAAcC,EAAkClB,EAAlCkB,SAAUC,EAAwBnB,EAAxBmB,YAAaC,EAAWpB,EAAXoB,OAEvDC,EAAaJ,EACbK,EAASC,KAAKC,MAAmB,GAAbH,GAE1B,OACEI,EAAAA,EAAAA,MAAA,OAAAX,SAAA,EACED,EAAAA,EAAAA,KAAA,UAAQa,QAAS,kBAAMhC,GAAU,EAAE,EAACoB,SAAC,aACrCW,EAAAA,EAAAA,MAAA,OAAAX,SAAA,EACEW,EAAAA,EAAAA,MAAA,OAAKE,UAAWlC,EAAQV,SAAS+B,SAAA,EAC/BD,EAAAA,EAAAA,KAAA,OAAKe,IAjCG,kCAiCUT,EAAaU,IAAI,YACnCJ,EAAAA,EAAAA,MAAA,OAAAX,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKE,KACLS,EAAAA,EAAAA,MAAA,KAAAX,SAAA,CAAG,eAAaQ,EAAO,QACvBT,EAAAA,EAAAA,KAAA,MAAAC,SAAI,cACJD,EAAAA,EAAAA,KAAA,KAAAC,SAAII,KACJL,EAAAA,EAAAA,KAAA,MAAAC,SAAI,WAQHM,GAAUA,EAAOU,OAAS,GACzBjB,EAAAA,EAAAA,KAAA,MAAAC,SACGM,EAAOW,KAAI,SAACC,GAAK,OAChBnB,EAAAA,EAAAA,KAAA,MAAAC,SAAoBkB,EAAMC,MAAjBD,EAAM9B,GAAqB,OAIxCW,EAAAA,EAAAA,KAAA,KAAAC,SAAG,2BAKTD,EAAAA,EAAAA,KAAA,OAAKc,UAAWlC,EAAQP,QAExBuC,EAAAA,EAAAA,MAAA,OAAAX,SAAA,EACED,EAAAA,EAAAA,KAAA,KAAAC,SAAG,4BACHW,EAAAA,EAAAA,MAAA,MAAAX,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CACRC,GAAE,WAAAC,OAAalC,EAAE,SAEjBY,SACC,YAKHD,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CACRC,GAAE,WAAAC,OAAalC,EAAE,YAEjBY,SACC,kBAMLD,EAAAA,EAAAA,KAAA,OAAKc,UAAWlC,EAAQP,QAExB2B,EAAAA,EAAAA,KAACwB,EAAAA,GAAM,YA4BjB,C","sources":["components/pages/MovieDetailsPage.jsx"],"sourcesContent":["import React,{ useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate, useParams, NavLink, Outlet } from \"react-router-dom\";\r\nimport { getMovieById } from '../utils/moviesAPI';\r\nimport { createUseStyles } from 'react-jss';\r\n// import Cast from '../Cast';\r\n// import Reviews from '../Reviews';\r\n\r\nconst useStyles = createUseStyles({\r\n  mainInfo: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  line: {\r\n    top: '0',\r\n    left: '0',\r\n    width: '100%',\r\n    height: '1px',\r\n    backgroundColor: 'black',\r\n    margin: '10px',\r\n  },\r\n});\r\n\r\nconst MovieDetailsPage = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const API_IMG = 'https://image.tmdb.org/t/p/w300';\r\n  const [movieData, setMovieData] = useState(null);\r\n  const { id } = useParams();\r\n  // const [activeTab, setActiveTab] = useState(false);\r\n\r\n  // Movie details\r\n  const getMovieData = useCallback(() => {\r\n    getMovieById(id) \r\n      .then((data) => setMovieData(data))\r\n      .catch((error) => console.error(error))\r\n  }, [id]);\r\n  \r\n  useEffect(()=> {\r\n    if (id) {\r\n      getMovieData();\r\n    }  \r\n  }, [id, getMovieData]);  \r\n  \r\n  if (!movieData) {\r\n    return <div>Loading...</div>\r\n  }\r\n  console.log(id);\r\n  \r\n  const { original_title, vote_average, overview, poster_path, genres } = movieData;\r\n  \r\n  const decimalNum = vote_average;\r\n  const intNum = Math.floor(decimalNum * 10);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => navigate(-1)}>Go back</button>\r\n      <div>\r\n        <div className={classes.mainInfo}>\r\n          <img src={API_IMG+poster_path} alt=\"poster\" />\r\n          <div >\r\n            <h2>{original_title}</h2>\r\n            <p>User Score: {intNum}%</p>\r\n            <h3>Overview</h3>\r\n            <p>{overview}</p>\r\n            <h4>Genres</h4>\r\n\r\n            {/* <ul>\r\n              {genres.map((genre) => \r\n                <li key={genre.id}>{genre.name}</li>\r\n              )}\r\n            </ul> */}\r\n\r\n            {genres && genres.length > 0 ? (\r\n              <ul>\r\n                {genres.map((genre) => (\r\n                  <li key={genre.id}>{genre.name}</li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p>No genres found</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={classes.line}></div>\r\n\r\n        <div>\r\n          <p>Additional information</p>\r\n          <ul>\r\n            <li>\r\n              <NavLink \r\n              to={`/movies/${id}/cast`}\r\n              // isActive={() => activeTab === 'cast'}\r\n              // onClick={() => setActiveTab('cast')}\r\n              >\r\n                Cast\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink \r\n              to={`/movies/${id}/reviews`}\r\n              // isActive={() => activeTab === 'reviews'}\r\n              // onClick={() => setActiveTab('reviews')}\r\n              >\r\n                Reviews\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n\r\n          <div className={classes.line}></div>\r\n\r\n          <Outlet />\r\n\r\n          {/* {activeTab === 'cast' && (\r\n            <div>\r\n              <Cast />\r\n            </div>\r\n          )}\r\n\r\n          {activeTab === 'reviews' && (\r\n            <div>\r\n              <Reviews />\r\n            </div>\r\n          )} */}\r\n\r\n          {/* <Routes>\r\n            <Route path='/movies/:id/cast' element={<Cast />} />\r\n            <Route path='/movies/:id/reviews' element={<Reviews />} />\r\n          </Routes> */}\r\n\r\n\r\n        </div>\r\n        {/* <div>\r\n          <Route path='/movies/:id/cast' element={<Cast />} />\r\n          <Route path='/movies/:id/reviews' element={<Reviews />} />\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieDetailsPage;"],"names":["useStyles","createUseStyles","mainInfo","display","flexDirection","line","top","left","width","height","backgroundColor","margin","classes","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","movieData","setMovieData","id","useParams","getMovieData","useCallback","getMovieById","then","data","catch","error","console","useEffect","_jsx","children","log","original_title","vote_average","overview","poster_path","genres","decimalNum","intNum","Math","floor","_jsxs","onClick","className","src","alt","length","map","genre","name","NavLink","to","concat","Outlet"],"sourceRoot":""}